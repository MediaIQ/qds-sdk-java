{"name":"Qds-sdk-java","tagline":"A Java library that provides the tools you need to authenticate with, and use the Qubole Data Service API.","body":"## Qubole Data Service Java SDK\r\nA Java library that provides the tools you need to authenticate with, and use the Qubole Data Service API.\r\n\r\n## Installation\r\nCurrently, you will need to download and build from source:\r\n\r\n* Clone the project: git clone git@github.com:qubole/qds-sdk-java.git\r\n* cd to the directory\r\n* mvn install\r\n\r\nThen, in your Java application, using Maven, add a dependency:\r\n\r\n```\r\n<dependency>\r\n    <groupId>com.qubole.qds-sdk-java</groupId>\r\n    <artifactId>qds-sdk-java</artifactId>\r\n    <version>THE-VERSION</version>\r\n</dependency>\r\n```\r\n\r\n## Usage\r\n\r\nIn your application initialization code, allocate a QdsClient object:\r\n\r\n```\r\nQdsConfiguration configuration = new DefaultQdsConfiguration(YOUR_API_KEY);\r\nQdsClient client = QdsClientFactory.newClient(configuration);\r\n```\r\n\r\nThen, make api calls as needed. E.g.\r\n\r\n```\r\nFuture<HiveCommandResponse> hiveCommandResponseFuture = client\r\n    .command()\r\n    .hive()\r\n    .query(\"show tables;\")\r\n    .invoke();\r\nHiveCommandResponse hiveCommandResponse = hiveCommandResponseFuture.get();\r\n...\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}